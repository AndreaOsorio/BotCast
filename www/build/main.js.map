{"version":3,"sources":["../../src/login/login/login.ts","../../src/services/citiesService.ts","../../src/services/forecastService.ts","../../src/pages/admin/dashboard/dashboard.ts","../../src/services/dashboardService.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/principal/principal.ts","../../src/services/geolocationService.ts","../../src/pages/principal/addCity/addCity.ts","../../src/pages/graficas/graficas.ts","../../src/pages/chatbot/chatbot.ts","../../src/services/chatbotService.ts","../../src/pages/myforecasts/myforecasts.ts","../../src/services/myForecastService.ts","../../src/login/register/register.ts","../../src/services/statsService.ts","../../src/pages/admin/cities/cities.ts","../../src/pages/admin/myaccount/myaccount.ts","../../src/pages/admin/stats/stats.ts","../../src/pages/admin/users/users.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../node_modules/moment/locale ^/.//.*$","../../src/services/graphsService.ts","../../src/pages/admin/navbar/navbar.ts","../../src/services/cityManagerService.ts","../../src/services/usersInfoService.ts","../../src/services/authService.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {TabsPage} from '../../pages/tabs/tabs';\nimport {RegisterPage} from '../register/register';\nimport {UserLogin, AuthorizationService, AuthorizationToken} from '../../services/authService'\n\nimport {AdminDashboard} from '../../pages/admin/dashboard/dashboard'\n\n@Component({\n    selector: 'login',\n    templateUrl: 'login.html'\n})\n\nexport class LoginPage {\n\n    public user:UserLogin;\n\n    public constructor(public navCtrl: NavController, public authorizationService:AuthorizationService){\n        this.user = new UserLogin(\"x\",\"123\",\"\",\"\"); //testing user\n    }\n\n    /**\n     * Makes a call to authorize users according to their credentials\n     * Currently, only 2 types of users exist: administrators and common users\n     * Administrators are redirected to the admin dashboard, while common users are directed to the main mobile\n     * page with current a list of currently registered cities.\n     * An authorization token is provided to every user which specifies his/her privileges and expiration time\n     */\n    public login():void{\n        console.log(this.user);\n        this.authorizationService.authorizeUser(this.user).then(data=>{\n            if(data.authorized){\n                if(data.privileges==\"admin\"){\n                    this.navCtrl.push(AdminDashboard,{\n                        authToken:data\n                    });\n                }else{\n                    this.navCtrl.push(TabsPage,{\n                        authToken:data\n                    });\n                }\n\n            }\n        });\n    }\n\n    public register():void {\n        this.navCtrl.push(RegisterPage);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/login/login/login.ts","\nimport {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport * as $ from 'jquery';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\n\n//TODO: determine final DTO format for saved cities, should probably include location to use in geoloc services\nexport class Ciudad {\n    constructor(\n        public name: string\n    ) {\n    }\n}\n\n/**\n * Service that retrieves a user's saved cities to be displayed in the main tab of the mobile page.\n */\n@Injectable()\nexport class MyCitiesService {\n\n    //Currently a dummy call to a local json\n    /**\n     * Backend REST endpoint URL to retrieve the saved cities and its corresponding key (if any)\n     */\n    apiRoot:string = '../assets/json/cities/mycities.json';\n    // apiKey:String = '68940978733581cc8ee68abc6610f53e'; //when the actual backend endpoints work\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * Function that performs a REST call to the backend and retrieves a user's saved cities as a list of cities...\n     * @returns {Promise<T>}: promise that resolves to an array of a user's saved cities in the appropriate DTO object\n     */\n    public retrieveMyCities(): Promise<Ciudad[]>{\n\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let ciudades:Ciudad[] =[]\n                        let citiesJson = $.map(res.json(), function(e){return e});\n                        $.each(citiesJson, function(i,city){\n                            ciudades.push(new Ciudad(city.name))\n                        });\n                        resolve(ciudades);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/citiesService.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\n\n/**\n * Data object that encodes a specific hour's weather forecast\n */\nexport class HourForecast{\n    /**\n     *\n     * @param condition: description of that day's weather conditions e.g. Heavy Thunderstorms or Sunny\n     * @param temp: that hour's average temperature\n     * @param time: the timestamp of that hour at the first second\n     */\n    constructor(\n      public condition:string,\n      public temp: number,\n      public time: string\n    ){}\n}\n\n/**\n * Data object that encodes the current's date weather forecast\n */\nexport class TodayForecast{\n    /**\n     *\n     * @param cityName\n     * @param avgTemp\n     * @param tempMax\n     * @param tempMin\n     * @param condition: description of that day's weather conditions e.g. Heavy Thunderstorms or Sunny\n     * @param hourlyForecast\n     */\n    constructor(\n      public cityName: string,\n      public avgTemp: number,\n      public tempMax: number,\n      public tempMin: number,\n      public condition: string,\n      public hourlyForecast: HourForecast[]\n    ){}\n}\n\n/**\n * Data object that encapsulates a future's day weather forecast\n */\nexport class NextDaysForecast{\n    /**\n     * @param dayOfWeek: day of the week as a string (e.g. Thursday)\n     * @param tempMax: max temperature of that date\n     * @param tempMin: min temperature of that date\n     * @param tempAvg: average temperature of that date\n     * @param condition: description of that day's weather conditions e.g. Heavy Thunderstorms or Sunny\n     * @param date: that day's date in a YYYY-MM-DD format\n     */\n    constructor(\n      public dayOfWeek:string,\n      public tempMax:number,\n      public tempMin:number,\n      public tempAvg:number,\n      public condition: string,\n      public date:string\n    ){}\n}\n\n/**\n * Service that retrieves forecast data from the APIXU open API\n */\n@Injectable()\nexport class ForecastService {\n\n    /**\n     * Map for building the appropriate icons in the main users forecast tab based on\n     * the apixu API data\n     */\n    private iconMap ={\n        \"Partly cloudy\": \"md-partly-sunny\",\n        \"Overcast\": \"md-cloudy\",\n        \"Light rain\":\"md-umbrella\",\n        \"Sunny\":\"md-sunny\",\n        \"Mist\": \"md-cloudy\",\n        \"Cloudy\": \"md-cloudy\",\n        \"Fog\":\"md-cloudy\",\n        \"Clear\":\"md-moon\",\n        \"Light rain shower\":\"md-rainy\",\n        \"Moderate rain at times\":\"md-rainy\",\n        \"Heavy snow\":\"md-snow\",\n        \"Heavy rain\":\"md-umbrella\",\n        \"Patchy rain possible\":\"md-rainy\",\n        \"Light snow\":\"md-snow\",\n        \"Moderate snow\":\"md-snow\",\n        \"Blizzard\":\"md-snow\",\n        \"Patchy moderate snow\":\"md-snow\",\n        \"Blowing snow\":\"md-snow\",\n        \"Light drizzle\":\"md-umbrella\",\n        \"Light freezing rain\":\"md-snow\"\n    }\n\n    /**\n     * Utility map for pretty-printing dates\n     */\n    private dayOfWeekMap = {\n        6: \"Sunday\",\n        0: \"Monday\",\n        1: \"Tuesday\",\n        2: \"Wednesday\",\n        3: \"Thursday\",\n        4: \"Friday\",\n        5: \"Saturday\",\n    }\n\n    /**\n     * APIXU API root url and key generated for the project\n     */\n    apiRoot:string = 'http://api.apixu.com/v1/forecast.json';\n    apiKey:String = 'e3dd4e798f1d4c61821153113172310';\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * Retrieves a specific city's weather forecast for today.\n     * Optimized for retrieving less data if the requested hours are in the same day. If the requested hours go well into the next day, then\n     * a heavier query is performed that contains weather hourly data for 2 days.\n     * @param ciudad: city whose weather forecast wants to be known\n     * @returns {Promise<T>}: promise that resolves to the appropriate data object format\n     */\n    public currentWeather(ciudad: string): Promise<TodayForecast[]>{\n\n        let apiURL = `${this.apiRoot}?key=${this.apiKey}&q=${ciudad}`;\n        let currentHour = new Date().getHours();\n\n        if((currentHour+5) > 23) apiURL+=\"&days=2\";\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let forecast= res.json().forecast.forecastday[0]\n                        let hours:HourForecast[] = [];\n                        let i = 0;\n                        let j = 0;\n                        let h = null;\n\n                        let flagDayTransition = false;\n\n                        while(i<5) {\n                            if((currentHour+i)>23 && !flagDayTransition){\n                                currentHour = 0;\n                                forecast= res.json().forecast.forecastday[1]\n                                flagDayTransition=true;\n                            }\n\n                            if(flagDayTransition){\n                                h = forecast.hour[currentHour+j];\n                                j++;\n                            }else{\n                                h = forecast.hour[currentHour+i];\n                            }\n                            let numericHour = new Date(h.time).getHours();\n                            let stringHour = numericHour <10 ? \"0\"+numericHour+\":00\" : numericHour+\":00\";\n\n                            hours.push(new HourForecast(this.iconMap[h.condition.text], h.temp_c, stringHour))\n                            console.log(h.condition.text)\n                            i++;\n                        }\n                        let todayForecastArray:TodayForecast[] = []\n                        todayForecastArray.push(new TodayForecast(\n                            res.json().location.name,\n                            res.json().current.temp_c,\n                            forecast.day.maxtemp_c,\n                            forecast.day.mintemp_c,\n                            this.iconMap[res.json().current.condition.text],\n                            hours)\n                        );\n                        resolve(todayForecastArray);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n    /**\n     * Retrieves the weather forecast of a specific city for the required number of days\n     * @param ciudad: city whose weather forecast wants to be known\n     * @param numberOfDays: required number of days for the forecast query\n     * @returns {Promise<T>}: returns a promise that resolves to an array of data objects that contain the day-by-day forecasts\n     */\n    public weatherNextDays(ciudad: string, numberOfDays: number = 0): Promise<NextDaysForecast[]>{\n\n        const maxDaysForecast = 7;\n        if(numberOfDays == 0 || numberOfDays == undefined) numberOfDays = maxDaysForecast;\n\n        let apiURL = `${this.apiRoot}?key=${this.apiKey}&q=${ciudad}&days=${numberOfDays}`;\n        let promise = new Promise((resolve, reject) => {\n\n\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n\n                        let nextDaysForecasts:NextDaysForecast[] = [];\n\n                        let days= res.json().forecast.forecastday\n                        let i = 0;\n                        while(i < numberOfDays){\n\n                            let dayOfWeekString = (i==0) ?  \"Today\" : this.dayOfWeekMap[new Date(days[i].date).getDay()];\n\n                            console.log(days[i].day.condition.text)\n                            nextDaysForecasts.push(\n                                new NextDaysForecast(\n                                    dayOfWeekString,\n                                    days[i].day.maxtemp_c,\n                                    days[i].day.mintemp_c,\n                                    days[i].day.avgtemp_c,\n                                    this.iconMap[days[i].day.condition.text],\n                                    days[i].date\n                                )\n                            );\n                            i++;\n                        }\n\n\n                        resolve(nextDaysForecasts);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/forecastService.ts","import { Component, ViewChild } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {LoginPage} from '../../../login/login/login'\nimport {TopSearched, Visitors, VisitorService, SearchedService} from '../../../services/dashboardService';\nimport { BaseChartDirective } from 'ng2-charts/ng2-charts';\n\n\n@Component({\n    selector: 'dashboard',\n    templateUrl: 'dashboard.html'\n})\n\n/**\n * Admin main dashboard tab constructor\n */\nexport class AdminDashboard {\n\n\t/**\n\t *\tChart implementation for monthly visitors \n\t */\n\t\n\t@ViewChild(\"baseChart\") chart: BaseChartDirective;\n\n\tpublic lineChartData:Array<any>= [{data:[0,0,0,0,0,0], label:'Series A'}];\n    public lineChartLabels:Array<any> = ['0','0','0','0','0','0'];\n\n\n\t/**\n     *The following objects correspond to the graph configuration arguments, including label format, colors and label display locations, among others.\n     */\n    private lineChartOptions:any = {\n        responsive: true,\n        scales: {\n            yAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: '# of visits'\n                },\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    };\n\n    public lineChartColors:Array<any> = [\n        {\n            backgroundColor: 'rgba(30,144,255,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n\n    public tops: TopSearched[] = [];\n\tpublic visitors: Visitors[] = [];\n\n\n    public constructor(private visitorService: VisitorService, private seachedService: SearchedService,  public navCtrl: NavController) {\n  \n        seachedService.retrieveInfo().then(data=>this.tops=data);\n\n        //visitorService.retrieveInfo().then(data=>this.visitors=data);\n\n        visitorService.retrieveInfo().then(data => \n        {\n        \tthis.lineChartData = [{data: this.getVisits(data), label: \"Monthly visits\"}];\n            this.lineChartLabels = this.buildLabelArray(data);\n            this.reloadChart();\n        });\n    }\n\n    /**\n     * Makes a graph full state refresh whenever it's needed\n     * This includes the data buffer and axes labels\n     */\n    reloadChart(){\n        if (this.chart !== undefined) {\n            this.chart.chart.destroy();\n            this.chart.chart = 0;\n\n            this.chart.labels = this.lineChartLabels;\n            this.chart.datasets = this.lineChartData;\n            this.chart.ngOnInit();\n        }\n    }\n\n    /**\n     * Auxiliary function for filling data buffers in the correct format\n     * @param visitors: takes in a Visitors array and maps it it to a typical JS array\n     * @returns {number,number,number,number,number]}: array of number of visits according to Json data\n     */\n    public getVisits(visitors:Visitors[]): number[]{\n        return visitors.map(e=>e.visits);\n    }\n\n    /**\n     * Auxiliary function for filling the label buffers in the correct format\n     * @param visitors: takes in a Visitors array, takes its months and build the label data buffer\n     * @returns {[string,string,string,string,string]}: array of months as strings in a correct format\n     */\n\tpublic buildLabelArray(visitors:Visitors[]): string[]{\n        return visitors.map(e=>e.month);\n    }\n\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/dashboard/dashboard.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\nimport * as $ from 'jquery';\n\n\nexport class Visitors{\n    constructor(\n        public month:string,\n        public visits:number\n    ){}\n}\n\nexport class TopSearched{\n    constructor(\n        public name:string,\n        public searches:number\n    ){}\n}\n\n\n@Injectable()\nexport class VisitorService {\n\n    constructor(private http: Http) {\n    }\n\n    //Currently a dummy call to a local json\n    /**\n     * Backend REST endpoint URL to retrieve the user info from JSON\n     */\n    apiRoot:string = '../assets/json/admin/dashboard/visitors.json';\n    // apiKey:String = '68940978733581cc8ee68abc6610f53e'; //for later\n\n\n    public retrieveInfo():Promise<Visitors[]>{\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let visits:Visitors[] =[]\n                        let visitsJson = $.map(res.json(), function(e){return e});\n                        console.log(visitsJson)\n                        $.each(visitsJson, function(i,visit){\n                            visits.push(new Visitors(\n                                visit.month,\n                                visit.visits)\n                            )\n                        });\n                        resolve(visits);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n}\n\n@Injectable()\nexport class SearchedService {\n\n    constructor(private http: Http) {\n    }\n\n    //Currently a dummy call to a local json\n    /**\n     * Backend REST endpoint URL to retrieve the user info from JSON\n     */\n    apiRoot:string = '../assets/json/admin/dashboard/topsearched.json';\n    // apiKey:String = '68940978733581cc8ee68abc6610f53e'; //for later\n\n\n    public retrieveInfo():Promise<TopSearched[]>{\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let searches:TopSearched[] =[]\n                        let searchesJson = $.map(res.json(), function(e){return e});\n                        console.log(searchesJson)\n                        $.each(searchesJson, function(i,top){\n                            searches.push(new TopSearched(\n                                top.name,\n                                top.searches)\n                            )\n                        });\n                        resolve(searches);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/dashboardService.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 131;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 131\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 173;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 173\n// module chunks = 0","import { Component } from '@angular/core';\nimport { PrincipalPage } from '../principal/principal'\nimport { GraphsPage } from '../graficas/graficas'\nimport { ChatbotPage } from '../chatbot/chatbot'\nimport { MyForecastsPage } from '../myforecasts/myforecasts'\n\n\n@Component({\n  templateUrl: 'tabs.html'\n})\n\n/**\n * Tabs Root Component Class: declare here any additional tabs for user main mobile view, then map to appropriate HTML ionic tags in template\n */\nexport class TabsPage {\n\n  tab1Root = PrincipalPage;\n  tab2Root = GraphsPage;\n  tab3Root = ChatbotPage;\n  tab4Root = MyForecastsPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\nimport { MyCitiesService, Ciudad } from '../../services/citiesService';\nimport { ForecastService, TodayForecast, HourForecast, NextDaysForecast } from '../../services/forecastService';\nimport { ModalController, NavController, NavParams} from 'ionic-angular';\nimport { GeolocationService, RawLocation, GeolocationAddress} from '../../services/geolocationService';\nimport { CityManagerService } from '../../services/cityManagerService'\nimport { UsersInfoService, Usuario } from '../../services/usersInfoService'\nimport { AddCityModal } from './addCity/addCity'\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'principal',\n  templateUrl: 'principal.html'\n})\n/**\n * Component for user main interface, user can add cities, select cities, select current location and\n * today's weather along withnext week's forecasts will be displayed.\n * This component's state contains the user's currently saved cities, today's and next week's weather, today's date,\n * the user's current location in latitude and longitude (raw format) and the user's approximate address.\n */\nexport class PrincipalPage {\n    private ciudades: Ciudad[] = [];\n    private todayForecast:TodayForecast[] = [];\n    private todayHourlyForecast: HourForecast[] = [];\n    private nextDaysForecast: NextDaysForecast[] = [];\n    private todaysDate:string;\n    private mycurrentLocationLatLong:RawLocation;\n    private myCurrentLocationReverseGeocoded:GeolocationAddress;\n    private currentUser:Usuario;\n    private currentCity:String;\n\n    /**\n     *\n     * @param myCitiesService: service that retrieves a user's saved cities\n     * @param forecastService: service that retrieves today's and next week's weather forecasts\n     * @param navCtrl: application navigation controller\n     * @param navParams: parameters to be passed between different screens\n     * @param geolocationService: service that retrieves user's current location in latLong format, then performs an external call\n     * to a geocoder to get the exact address\n     */\n  public constructor(private myCitiesService: MyCitiesService,\n                     private forecastService: ForecastService,\n                     public navCtrl: NavController,\n                     public navParams: NavParams,\n                     private geolocationService: GeolocationService,\n                     private cityManagerService: CityManagerService,\n                     public modalCtrl: ModalController,\n                     public usersInfoService: UsersInfoService) {\n\n        this.todaysDate = this.getTodaysDate();\n\n        this.makeApiCalls(\"\");\n\n        usersInfoService.retrieveUserInfoById(localStorage.idUsuario).then(\n            res =>{\n                this.currentUser=  res;\n            }\n        );\n\n        //TODO: connect with real user login id\n        localStorage.id_usuario = \"xxxxxxxxxx01\"\n\n  }\n\n\n  presentAddCityModal() {\n      let contactModal = this.modalCtrl.create(AddCityModal, {user: this.currentUser});\n      contactModal .onDidDismiss(ciudad => {\n          if(ciudad!==null && ciudad.length>0){\n              console.log(ciudad)\n              let arreglo_nombres = ciudad.map(c=> new Ciudad(c.name))\n              localStorage.userCities = JSON.stringify(arreglo_nombres);\n              this.ciudades = arreglo_nombres\n          }\n      });\n      contactModal.present();\n  }\n\n    /**\n     * @param city: city whose current and future weather wants to be known\n     * This method calls all the different services to retrieve the selected city's weather and then redraws\n     * the whole view with the retrieved data in the appropriate format\n     */\n  public makeApiCalls(city:string) {\n\n      if(city == undefined || city == \"\"){\n          //TODO: uncomment in prod\n          // this.getMyLocation();\n          city = \"Amsterdam\";\n      }\n\n\n      this.forecastService.currentWeather(city).then( data=>{\n          this.todayForecast = data\n          this.todayHourlyForecast = this.todayForecast[0].hourlyForecast\n          console.log(this.todayForecast)\n      });\n\n      this.forecastService.weatherNextDays(city).then( data=>{\n          this.nextDaysForecast = data\n          console.log(this.nextDaysForecast)\n      });\n\n      this.usersInfoService.retrieveUserInfoById(localStorage.idUsuario).then(\n          res =>{\n              this.currentUser=  res;\n              let arreglo_nombres = this.currentUser.cities.map(ciudad => new Ciudad(ciudad[\"name\"]))\n              this.ciudades = arreglo_nombres\n              localStorage.userCities = JSON.stringify(arreglo_nombres);\n          }\n        );\n  }\n\n    /**\n     * First acquires user's longitude and latitude with cordova's native hardware interaction API,\n     * then performs an external call to retrieve the user's approximate address but, most importantly, his/her current city\n     * to call makeApiCalls() and redraw the view with the current location's weather\n     */\n  public getMyLocation(){\n      var loading_gif = $(\"#gif-loading-container\");\n      loading_gif.removeClass(\"x\");\n      loading_gif.addClass(\"y\");\n      this.geolocationService.getMyCurrentLocation().then(data => {\n          this.mycurrentLocationLatLong = data;\n          this.geolocationService.getMyCurrentAddressBasedOnLatLong(data).then(data => {\n              this.myCurrentLocationReverseGeocoded = data;\n              this.makeApiCalls(data.city)\n              loading_gif.removeClass(\"y\");\n              loading_gif.addClass(\"x\");\n          });\n      });\n  }\n\n    /**\n     *\n     * @param cityName: city parameter used in templates to know which city has been selected from the slider\n     * Event binding function to retrieve users current location and update screen\n     */\n  public changeCity(cityName:string) {\n      this.makeApiCalls(cityName);\n      this.currentCity = cityName;\n      localStorage.currentCity = this.currentCity\n  }\n\n  public moveToAddCityWindow() {\n      console.log(\"moving window!\");\n  }\n\n\n    /**\n     *\n     * @returns {string} returns today's date in a pretty format (DayOfWeek, MonthName DayOfMonth, CurrentYear e.g. Thursday, January 20, 2099)\n     * Auxiliary method for date formatting\n     */\n  public getTodaysDate(){\n    let dayOfWeekMap = {\n          0: \"Sunday\",\n          1: \"Monday\",\n          2: \"Tuesday\",\n          3: \"Wednesday\",\n          4: \"Thursday\",\n          5: \"Friday\",\n          6: \"Saturday\",\n    }\n\n    let monthMap= {\n        0: \"January\",\n        1: \"February\",\n        2: \"March\",\n        3: \"April\",\n        4: \"May\",\n        5: \"June\",\n        6: \"July\",\n        7: \"August\",\n        8: \"September\",\n        9: \"October\",\n        10: \"November\",\n        11: \"December\",\n    }\n    let today = new Date();\n    let dayOfweek= dayOfWeekMap[today.getDay()];\n    let dayOfMonth = today.getDate();\n    let monthString = monthMap[today.getMonth()]\n    return dayOfweek+\", \"+monthString+\" \"+dayOfMonth+\", \"+today.getFullYear();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/principal/principal.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\nimport { NativeGeocoder, NativeGeocoderReverseResult} from '@ionic-native/native-geocoder';\n\n/**\n * Data object that represents the user's approximate address, city and country specified in different\n * fields for faster referencing\n */\nexport class GeolocationAddress{\n    constructor(\n        public latlong:RawLocation,\n        public address:string,\n        public city:string,\n        public country:string\n    ){}\n}\n\n/**\n * Data object that corresponds to the user's current location in longitude and latitude\n */\nexport class RawLocation{\n    constructor(\n        public latitude:number,\n        public longitude:number\n    ){}\n}\n\n/**\n * Service that retrieves a user's current location using cordova's native hardware plugin and\n * then performs an external query to reverse geocode the user's approximate address\n */\n@Injectable()\nexport class GeolocationService {\n\n    constructor(private http: Http,\n                private geolocation: Geolocation,\n                private nativeGeocoder: NativeGeocoder){\n    }\n\n    /**\n     * Google Maps api root and free API key generated for this project\n     */\n    apiRoot:string='https://maps.googleapis.com/maps/api/geocode/json'\n    apiKey:string='AIzaSyDbAbiXC0l2fZUSmPGlHZayA-KzUIfLVLo'\n\n    /**\n     * Retrieves a user's address using his/her raw location (lat and long) using the Google Maps API for reverse geocoding\n     * @param latlng: the user's latitude and longitude object retrieved from the other native geolocation service\n     * @returns {Promise<T>}: return a promise that contains the user's approximate address encoded in the appropriate data object\n     */\n    public getMyCurrentAddressBasedOnLatLong(latlng:RawLocation): Promise<GeolocationAddress> {\n        let apiURL = `${this.apiRoot}?latlng=${latlng.latitude},${latlng.longitude}&key=${this.apiKey}`;\n        console.log(apiURL)\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        console.log(res.json());\n                        resolve(new GeolocationAddress(\n                            new RawLocation(latlng.latitude,latlng.longitude),\n                            res.json().results[0].formatted_address,\n                            res.json().results[5].formatted_address.split(\",\")[0],\n                            res.json().results[5].formatted_address.split(\",\")[1]));\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n        return promise;\n    }\n\n\n    /**\n     * Retrieve's a user's current lat and longitude using the device's hardware through cordova\n     * @returns {Promise<T>}: returns a promise with the user's current latitude and longitude encoded in the appropriate data object\n     */\n    public getMyCurrentLocation():Promise<RawLocation>{\n        let pseudoPromise = new Promise((resolve, reject) => {\n            this.geolocation.getCurrentPosition()\n                .then(\n                    res=>{\n                        resolve(new RawLocation(res.coords.latitude, res.coords.longitude));\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                )\n        });\n        return pseudoPromise;\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/geolocationService.ts","import { Component } from '@angular/core';\nimport { MyCitiesService, Ciudad } from '../../../services/citiesService';\nimport { ForecastService, TodayForecast, HourForecast, NextDaysForecast } from '../../../services/forecastService';\nimport { ModalController,ViewController, NavController, NavParams} from 'ionic-angular';\nimport { GeolocationService, RawLocation, GeolocationAddress} from '../../../services/geolocationService';\nimport { CityManagerService, Cities, ActiveCity } from '../../../services/cityManagerService'\nimport { UsersInfoService, Usuario } from '../../../services/usersInfoService'\nimport * as $ from 'jquery';\n\n@Component({\n    selector: 'addCity',\n    templateUrl: 'addCity.html'\n})\n\nexport class AddCityModal {\n\n    public cities = [];\n    public selectedCities = [];\n    public currentUser:Usuario;\n    public selectedMap = new Map();\n    \n    public constructor(public params: NavParams,\n                       public viewCtrl: ViewController,\n                       private cityManagerService: CityManagerService,\n                       private usersInfoService:UsersInfoService) {\n\n        cityManagerService.retrieveActiveCities().then(res => {\n            this.cities = res;\n        });\n\n        this.currentUser = params.get('user');\n    }\n\n    addRemoveCity(event){\n        let currentRow = $(event.currentTarget);\n        let currentRowId = currentRow.children(\"input\").val();\n        if(!this.selectedMap.get(currentRowId)){\n            currentRow.addClass(\"active-city\");\n            let cityCountry = \"\";\n            $.each(currentRow.children(),function(){\n                cityCountry+=$(this).html().trim()+\",\";\n            });\n\n            this.selectedMap.set(currentRowId,cityCountry);\n\n        }else{\n            this.selectedMap.delete(currentRowId);\n            currentRow.removeClass(\"active-city\");\n        }\n    }\n\n    dismiss(){\n        this.viewCtrl.dismiss(this.selectedCities);\n    }\n\n    saveCities(){\n        this.selectedCities.length = 0;\n\n        let aux = this.selectedCities;\n\n        this.selectedMap.forEach(function(value,key,map) {\n            aux.push(\n                {\n                    id:key,\n                    name: value.split(\",\")[1],\n                    country: value.split(\",\")[2],\n                }\n            );\n        });\n\n        this.selectedCities = aux;\n\n        let params = {\n            nombre: this.currentUser.name,\n            apellido:this.currentUser.lastname,\n            email:this.currentUser.email,\n            password: this.currentUser.password,\n            usuario: this.currentUser.username,\n            ciudades: this.selectedCities\n        }\n\n        this.usersInfoService.updateUserInfo(localStorage.idUsuario, params).then(res=>{\n            console.log(\"Cambios a lista guardados!\")\n            console.log(res)\n        })\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/principal/addCity/addCity.ts","import { Component, ViewChild } from '@angular/core';\nimport { ForecastService, NextDaysForecast } from '../../services/forecastService';\nimport { MyCitiesService, Ciudad } from '../../services/citiesService';\nimport { MyForecastService } from '../../services/myForecastService';\nimport { BaseChartDirective } from 'ng2-charts/ng2-charts';\nimport { NavController } from 'ionic-angular';\n\n\n//TODO: fix initial graph pop bug\n//TODO: fix initial date bug\n\n@Component({\n    selector: 'graphs',\n    templateUrl: 'graficas.html'\n})\n\n\n/**\n * User graph componennt, controlls the user interaction between the different fields, the API calls and the corresponding UI updates\n * This component's state contains a reference to the chart's directives, the currently selected cities, the chart's data buffer\n * retrieved from the forecasts service and the state of the form's components for frequent usage.\n */\nexport class GraphsPage {\n    @ViewChild(\"baseChart\") chart: BaseChartDirective;\n\n    private ciudades: Ciudad[] = [];\n\n    private maxDaysApiRequest:number = 7;\n\n    currentDataBufferForGraph:Array<any> = [{data:[0,0,0,0,0], label:'Series A'}];\n\n    private nextDaysForecastsForGraph:NextDaysForecast[] = []\n\n    public lineChartData:Array<any>= [{data:[0,0,0,0,0,0], label:'Series A'}];\n    public lineChartLabels:Array<any> = ['0','0','0','0','0','0'];\n\n    private todaysDate:string =\"\";\n    private maxFutureDate:string =\"\";\n\n    private selectedInitDate:string = this.todaysDate;\n    private selectedFinalDate:string = \"\";\n\n    private currentCity:string;\n\n    private mostFrequentCondition:string;\n\n    /**\n     *The following objects correspond to the graph configuration arguments, including label format, colors and label display locations, among others.\n     */\n    private lineChartOptions:any = {\n        responsive: true,\n        scales: {\n            yAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Temperature (°C)'\n                },\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    };\n\n    private selectedCity:string;\n    private selectedTempOption:string = \"max\";\n\n    public lineChartColors:Array<any> = [\n        {\n            backgroundColor: 'rgba(30,144,255,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n    public lineChartLegend:boolean = true;\n    public lineChartType:string = 'line';\n\n    /**\n     * Component constructor.\n     * By default it retrieves the data from the user's current location and draws the graph accordingly.\n     * @param forecastService: retrieves weather data from the services\n     * @param myCitiesService: retrieves currently saved cities by users\n     */\n    constructor(private forecastService: ForecastService,\n                private myCitiesService: MyCitiesService,\n                private myForecastService: MyForecastService,\n                private navController:NavController) {\n\n        this.currentCity = localStorage.currentCity;\n        this.selectedCity = this.currentCity;\n\n        this.forecastService.weatherNextDays(this.currentCity).then( data => {\n\n\n            var conditions = data.map(forecast=>forecast.condition);\n\n            //TODO: put this icon somewhere visible\n            this.mostFrequentCondition = this.calculateMostFrequentCondition(conditions);\n\n            this.lineChartData = [{data: this.getMaxTemps(data), label: this.currentCity}];\n            this.lineChartLabels = this.buildLabelArray(data);\n            this.reloadChart();\n        });\n\n        this.myCitiesService.retrieveMyCities().then(data=>{\n            this.ciudades = JSON.parse(localStorage.userCities)\n        } );\n\n        this.setTodayDateTime();\n        this.setMaxDateTime();\n        this.selectedInitDate = this.todaysDate;\n        this.selectedFinalDate = this.maxFutureDate;\n\n    }\n\n    ngAfterContentChecked() {\n        if(JSON.stringify(this.ciudades) != localStorage.userCities){\n            this.ciudades = JSON.parse(localStorage.userCities)\n        }\n        if(this.currentCity != localStorage.currentCity){\n            this.currentCity = localStorage.currentCity;\n        }\n    }\n\n    /**\n     * Makes a graph full state refresh whenever it's needed\n     * This includes the data buffer and axes labels\n     */\n    reloadChart(){\n        if (this.chart !== undefined) {\n            this.chart.chart.destroy();\n            this.chart.chart = 0;\n\n            this.chart.labels = this.lineChartLabels;\n            this.chart.datasets = this.lineChartData;\n            this.chart.ngOnInit();\n        }\n    }\n\n    /**\n     * Event binding method for templates, when a new city is selected in the pop-up menu\n     */\n    public changeCity() {\n        this.updateGraph();\n    }\n\n    /**\n     * Make a char with the updated data buffers\n     * @param forecastDays: what is the date range in days desired for the service query\n     */\n    public updateGraph(forecastDays:number = 0){\n        this.forecastService.weatherNextDays(this.selectedCity, forecastDays).then( data=>{\n            var conditions = data.map(forecast=>forecast.condition);\n            this.mostFrequentCondition = this.calculateMostFrequentCondition(conditions);\n            this.nextDaysForecastsForGraph = data;\n            this.populateGraph();\n        });\n    }\n\n    /**\n     * Event binding method for templates, when new option (min, max or avg temperatures) is selected\n     */\n    public optionChanged(){\n        this.populateGraph();\n    }\n\n    /**\n     * Retrieve new data from the forecast services and fill the graph data buffer with this new information\n     * Depending on the option selected in the UI, this will retrieve the maximum, minimum or average temperatures\n     * of the desired region for a specific period.\n     */\n    public populateGraph(){\n        let dataAux =[];\n        switch(this.selectedTempOption){\n            case \"max\":\n                dataAux = [{data: this.getMaxTemps(this.nextDaysForecastsForGraph), label: this.selectedCity}];\n                break;\n            case \"min\":\n                dataAux = [{data: this.getMinTemps(this.nextDaysForecastsForGraph), label: this.selectedCity}];\n                break;\n            case \"avg\":\n                dataAux = [{data: this.getAvgTemps(this.nextDaysForecastsForGraph), label: this.selectedCity}];\n                break;\n        }\n\n        this.lineChartLabels = this.buildLabelArray(this.nextDaysForecastsForGraph);\n        this.lineChartData = dataAux;\n        this.reloadChart();\n\n    }\n\n    /**\n     * Auxiliary function for filling data buffers in the correct format\n     * @param nextDayForecasts: takes in a NextDayForecast array and maps it it to a typical JS array\n     * @returns {[number,number,number,number,number]}: array of maximum temperatures in a specific date and location\n     */\n    public getMaxTemps(nextDayForecasts:NextDaysForecast[]): number[]{\n        return nextDayForecasts.map(e=>e.tempMax);\n    }\n\n    /**\n     * Auxiliary function for filling data buffers in the correct format\n     * @param nextDayForecasts: takes in a NextDayForecast array and maps it it to a typical JS array\n     * @returns {[number,number,number,number,number]}: array of minumum temperatures in a specific date and location\n     */\n    public getMinTemps(nextDayForecasts:NextDaysForecast[]): number[]{\n        return nextDayForecasts.map(e=>e.tempMin);\n    }\n\n    /**\n     * Auxiliary function for filling data buffers in the correct format\n     * @param nextDayForecasts: takes in a NextDayForecast array and maps it it to a typical JS array\n     * @returns {[number,number,number,number,number]}: array of average temperatures in a specific date and location\n     */\n    public getAvgTemps(nextDayForecasts:NextDaysForecast[]): number[]{\n        return nextDayForecasts.map(e=>e.tempAvg);\n    }\n\n    /**\n     * Auxiliary function for filling the label buffers in the correct format\n     * @param nextDayForecasts: takes in a NextDayForecast array, takes its dates and build the label data buffer\n     * @returns {[number,number,number,number,number]}: array of dates as strings in a correct format\n     */\n    public buildLabelArray(nextDayForecasts:NextDaysForecast[]): string[]{\n        return nextDayForecasts.map(e=>this.buildLabelFromString(e.date));\n    }\n\n\n    /**\n     * Takes a date in an YYYY-MM-dd format and pretty-formats it\n     * @param date: date in YYYY-MM-dd format\n     * @returns {string}: return date formatted as e.g. Jan 31\n     */\n    public buildLabelFromString(date:string){\n        let abbreviatedMonthMap = {\n            0:\"Jan\", 1:\"Feb\", 2:\"Mar\", 3:\"Apr\", 4:\"May\", 5:\"Jun\", 6:\"Jul\", 7:\"Aug\", 8:\"Sep\", 9:\"Oct\", 10:\"Nov\", 11:\"Dec\"\n        }\n        let d = new Date(date)\n        return abbreviatedMonthMap[d.getMonth()]+\" \"+(d.getDate()+1);\n    }\n\n    /**\n     * Get today's date in timestamp format and set it to YYYY-MM-DD format\n     */\n    public setTodayDateTime(){\n        let today = new Date();\n        this.todaysDate = today.getFullYear()+\"-\"+this.buildCorrectFormatMonth(today)+\"-\"+ this.buildCorrectFormatDay(today);\n\n    }\n\n    /**\n     * Establish the maximum future date in which the weather forecast service can be queried\n     * @param maxDays: maximum amount of days for forecast service query, depends on API restrictions\n     */\n    public setMaxDateTime(maxDays = (this.maxDaysApiRequest-1)){\n        let maxDate = new Date((new Date().getTime()) + maxDays*24*60*60*1000);\n        this.maxFutureDate= maxDate.getFullYear()+\"-\"+this.buildCorrectFormatMonth(maxDate)+\"-\"+ this.buildCorrectFormatDay(maxDate);\n    }\n\n    /**\n     * Auxiliar function for formatting dates\n     * @param date: take a day of the month as e.g. 23 or 1\n     * @returns {string|number}: if a day is less than 10 format it as e.g. 01 or 08\n     */\n    public buildCorrectFormatDay(date){\n        return (date.getDate()+1) < 10 ? \"0\"+(date.getDate()+1): (date.getDate());\n    }\n\n    /**\n     * Auxiliar function for formatting dates\n     * @param date: take a month as e.g. 12 or 8\n     * @returns {string|number}: if a month's number is less than 10 format it as e.g. 01 or 08\n     */\n    public buildCorrectFormatMonth(date){\n        return (date.getMonth()+1) < 10 ? \"0\"+(date.getMonth()+1): (date.getMonth()+1);\n    }\n\n    /**\n     * Event binding function with templates, updates function once the final date date-picker has been changed\n     */\n    public triggerChartUpdateOnFinalDateChange(){\n        this.updateGraph(this.calculateDifferenceInDaysBetweenDates());\n    }\n\n    /**\n     * Axuiliary function to calculate the number of dates between the currently selected initial and final date for query\n     * @returns {number}: number of dates between two days\n     */\n    public calculateDifferenceInDaysBetweenDates(){\n        var timeDifferenceEpoch = Math.abs(new Date(this.selectedInitDate).getTime() - new Date(this.selectedFinalDate).getTime());\n        var dayDifference = Math.ceil(timeDifferenceEpoch / (1000 * 3600 * 24));\n        return dayDifference+1;\n    }\n\n\n    /**\n     * Add a forecast to the user's list of saved forecasts\n     */\n    public saveForecast(){\n        let forecastToSave = {\n            nombre: this.selectedCity,\n            fecha_inicial: this.selectedInitDate,\n            fecha_final: this.selectedFinalDate,\n            id_usuario: localStorage.id_usuario,\n            condicion: this.mostFrequentCondition\n        }\n\n        this.myForecastService.saveForecast(forecastToSave).then(data=>{\n            console.log(data)\n            }\n        );\n\n\n    }\n\n    /**\n     * Determine the most frequent weather condition in the required forecast days\n     * @param conditions\n     * @returns {string}\n     */\n    public calculateMostFrequentCondition(conditions){\n        var arr = [];\n        for(var i=0;i < conditions.length;i++){\n            if(!arr[conditions[i]]){\n                arr[conditions[i]] = 1;\n            }else{\n                arr[conditions[i]]++;\n            }\n        }\n        var max = 0;\n        var maxVal = \"\";\n        for(var x in arr){\n            if(arr[x]>max){\n                max = arr[x];\n                maxVal = x;\n            }\n        }\n        return maxVal;\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/graficas/graficas.ts","import { Component } from '@angular/core';\nimport { ChatbotService, Conversation, Message } from '../../services/chatbotService';\n\n\n\n@Component({\n    selector: 'bot',\n    templateUrl: 'chatbot.html'\n})\n\nexport class ChatbotPage {\n\n    public conversation:Conversation;\n\n    constructor(private chatbotService: ChatbotService) {\n        chatbotService.retrieveConversation().then(data=>this.conversation=data);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chatbot/chatbot.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\nimport * as $ from 'jquery';\n/**\n * Data transfer objects that specifies the encoding data of a message between a user and the chatbot\n */\nexport class Message{\n    /**\n     * @param isBotMessage: the message is form a user or the bot\n     * @param timestamp: time and date in which the message was sent\n     * @param content: the content of the message, can be information for graphs and what not\n     */\n    constructor(\n        public isBotMessage:boolean,\n        public timestamp:string,\n        public content:string\n    ){}\n}\n\n/**\n * Data transfer object that codifies the conversation between a user and the chatbot\n */\nexport class Conversation{\n    /**\n     * @param messages: array of messages that constitute the actual conversation\n     * @param init_time: timestamp of when the conversation began\n     * @param end_time: timestamp of when the conversation ended\n     */\n    constructor(\n        public messages:Message[],\n        public init_time:string,\n        public end_time:string\n    ){}\n}\n\n\n@Injectable()\nexport class ChatbotService {\n\n    constructor(private http: Http) {\n    }\n\n    //Currently a dummy call to a local json\n    /**\n     * Backend REST endpoint URL to retrieve the conversation between a user and the chatbot\n     */\n    apiRoot:string = '../assets/json/chatbot/conversation.json';\n    // apiKey:String = '68940978733581cc8ee68abc6610f53e'; //for later\n\n    /**\n     * Function that performs a REST call to the backend and retrieves a user's conversation with the chatbot in an array of messages\n     * @returns {Promise<T>}: promise that resolves to a user-chatbot conversation in the appropriate DTO\n     */\n    public retrieveConversation():Promise<Conversation>{\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let messages:Message[] =[]\n                        let messagesJson = $.map(res.json(), function(e){return e});\n                        console.log(messagesJson)\n                        $.each(messagesJson, function(i,message){\n                            messages.push(new Message(\n                                message.isBotMessage,\n                                message.timestamp,\n                                message.content)\n                            )\n                        });\n                        resolve(messages);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/chatbotService.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams} from 'ionic-angular';\nimport { MyForecastService, MyForecast } from '../../services/myForecastService';\n\n@Component({\n    selector: 'myforecasts',\n    templateUrl: 'myforecasts.html'\n})\n\n/**\n * Component that contains the user's saved forecasts\n */\nexport class MyForecastsPage {\n\n    private forecasts: MyForecast[] = [];\n    private userId:string;\n\n    /**\n     * Componennt constructor\n     * @param navCtrl: application navigation controller\n     * @param navParams: parameters to be passed between different screens\n     */\n    public constructor(\n                       public navCtrl: NavController,\n                       public navParams: NavParams,\n                       private myForecastService: MyForecastService) {\n\n        this.myForecastService.retrieveMyForecasts().then(data=>this.forecasts=data);\n        this.userId = localStorage.id_usuario\n\n        //AutoSelectTab\n        // this.navController.parent.select(1);\n    }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/myforecasts/myforecasts.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport * as $ from 'jquery';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\nimport {ActiveCity} from \"./cityManagerService\";\n\nexport class MyForecast{\n    constructor(\n      public cityName: string,\n      public condition: string,\n      public startDate:string,\n      public endDate:string\n    ){}\n}\n\n@Injectable()\nexport class MyForecastService {\n\n\n    apiRoot:string = '../assets/json/forecast/myforecasts.json';\n\n    constructor(private http: Http) {\n    }\n\n    retrieveMyForecasts(): Promise<MyForecast[]>{\n\n    let iconMap ={\n            \"Partly cloudy\": \"md-partly-sunny\",\n            \"Overcast\": \"md-cloudy\",\n            \"Light rain\":\"md-umbrella\",\n            \"Sunny\":\"md-sunny\",\n            \"Mist\": \"md-cloudy\",\n            \"Cloudy\": \"md-cloudy\",\n            \"Fog\":\"md-cloudy\",\n            \"Clear\":\"md-moon\",\n            \"Light rain shower\":\"md-rainy\",\n            \"Moderate rain at times\":\"md-rainy\",\n            \"Heavy snow\":\"md-snow\",\n            \"Heavy rain\":\"md-umbrella\",\n            \"Patchy rain possible\":\"md-rainy\",\n            \"Light snow\":\"md-snow\",\n            \"Moderate snow\":\"md-snow\"\n        };\n\n\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let abbreviatedMonthMap = {\n                            0:\"Jan\", 1:\"Feb\", 2:\"Mar\", 3:\"Apr\", 4:\"May\", 5:\"Jun\", 6:\"Jul\", 7:\"Aug\", 8:\"Sep\", 9:\"Oct\", 10:\"Nov\", 11:\"Dec\"\n                        }\n                        let forecasts:MyForecast[] =[]\n                        let forecastsJson = $.map(res.json(), function(e){return e});\n                        $.each(forecastsJson, function(i,forecast){\n\n                            let d1 = new Date(forecast.startDate)\n                            let d2 = new Date(forecast.endDate)\n                            let init_date = abbreviatedMonthMap[d1.getMonth()]+\" \"+(d1.getDate());\n                            let final_date = abbreviatedMonthMap[d2.getMonth()]+\" \"+(d2.getDate());\n\n                            console.log(forecast)\n                            forecasts.push(new MyForecast(forecast.cityName,\n                                iconMap[forecast.condition],\n                                init_date,\n                                final_date))\n                        })\n                        resolve(forecasts);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n    public saveForecast(forecastObj): Promise<ActiveCity>{\n\n        let apiURL:string = 'http://localhost:3000/api/Pronosticos';\n        let params = {\n            ciudad: forecastObj[\"nombre\"],\n            fecha_inicial: forecastObj[\"fecha_inicial\"],\n            fecha_final: forecastObj[\"fecha_final\"],\n            condicion: forecastObj[\"condicion\"],\n            id_usuario: forecastObj[\"id_usuario\"],\n        }\n\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.post(apiURL, params)\n                .toPromise()\n                .then(\n                    res => {\n                        let pronostico = res.json();\n                        resolve(new MyForecast(\n                            pronostico.ciudad,\n                            pronostico.condicion,\n                            pronostico.fecha_inicial,\n                            pronostico.fecha_final\n                        ));\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n        return promise;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/myForecastService.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TabsPage } from '../../pages/tabs/tabs';\nimport { UserLogin, AuthorizationService, AuthorizationToken} from '../../services/authService'\nimport { LoginPage } from '../login/login'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'register',\n    templateUrl: 'register.html'\n})\n\nexport class RegisterPage {\n\n    slideOneForm: FormGroup;\n\n\n    //TODO: implement form validators\n    /**\n     *\n     * @param navCtrl: application navigation controller to find your way between views\n     * @param authorizationService: service that provides users with authorization tokens once registered\n     * @param formBuilder: angular utility for form validation\n     * Register form component basic constructor\n     */\n    public constructor(public navCtrl: NavController, public authorizationService:AuthorizationService, public formBuilder: FormBuilder){\n        this.slideOneForm = formBuilder.group({\n            name: [''],\n            email: [''],\n            username: [''],\n            password: [''],\n            confirmpassword: ['']\n        });\n    }\n\n    /**\n     * Form fields will be validated and sent to backend for user final registration\n     */\n    public register():void{\n        //TODO: implement here call to POST API endpoint when backend is ready\n        this.navCtrl.push(LoginPage);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/login/register/register.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport * as $ from 'jquery';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\n\nexport class Stat{\n    constructor(\n      public users: string,\n      public activeUsers: string,\n      public maxUsers:string,\n      public favoriteCity:string\n    ){}\n}\n\n@Injectable()\nexport class StatService {\n\n    apiRoot:string = '../assets/json/stats/stats.json';\n\n    // apiKey:String = '68940978733581cc8ee68abc6610f53e'; //for later\n\n    constructor(private http: Http) {\n    }\n\n    retrieveStats(): Promise<Stat[]>{\n\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let stats:Stat[] =[]\n                        let statJson = $.map(res.json(), function(e){return e});\n                        console.log(statJson)\n                        $.each(statJson, function(i,stat){\n                            stats.push(new Stat(stat.users,\n                                                        stat.activeUsers,\n                                                        stat.maxUsers,\n                                                        stat.favoriteCity))\n                        })\n                        resolve(stats);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/statsService.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CityManagerService, Cities, ActiveCity } from '../../../services/cityManagerService'\nimport 'rxjs/add/operator/debounceTime';\nimport { Subject } from 'rxjs/Subject';\nimport * as $ from 'jquery';\n\n@Component({\n    selector: 'adminCities',\n    templateUrl: 'cities.html'\n})\n\n/**\n * Admin cities tab constructor\n */\nexport class AdminCities {\n\n    public cities: ActiveCity[] = [];\n    public citiesSearch: Cities[] = [];\n    private subject: Subject<string> = new Subject();\n\n    public constructor(private cityManagerService: CityManagerService, public navCtrl: NavController) {\n        cityManagerService.retrieveActiveCities().then(data=>this.cities=data);\n    }\n\n    ngOnInit() {\n        this.subject.debounceTime(500).subscribe(citySearch => {\n            this.handleSearch(citySearch);\n        });\n\n        $(\"#ion-grid-search-results-container\").hide();\n    }\n\n    onKeyUp(citySearch: string){\n        this.subject.next(citySearch);\n\n    }\n\n    handleSearch(searchedCity){\n        if(searchedCity==\"\"){\n            $(\"#ion-grid-search-results-container\").hide();\n        }else{\n            $(\"#ion-grid-search-results-container\").show();\n        }\n\n        this.cityManagerService.retrieveSearchedCityInfo(searchedCity).then(data => this.citiesSearch = data);\n    }\n\n    removeFromActiveCities = function(e){\n        let idCityToDelete = $(e.currentTarget).parent().siblings().children(\"input\").val();\n        this.cityManagerService.removeCity(idCityToDelete).then( res=> {\n            console.log(res.message);\n            //TODO: display modal window, city erased or something\n            this.cities = this.cities.filter(function (city) {\n                return city.id !== idCityToDelete;\n            });\n        });\n\n    }\n\n    addToActiveCities = function(e){\n        let arr =[];\n        $(e.currentTarget).parent().siblings().each(function(){\n            arr.push($(this).text())\n        });\n\n        this.cityManagerService.addToActiveCitiesService(\n            arr[0].split(\",\")[0],\n            arr[0].split(\",\")[1],\n            arr[1]).then(res=>{\n                this.cities.push(new ActiveCity(res.id,arr[0].split(\",\")[0],arr[0].split(\",\")[1], arr[1], true))\n            }\n        );\n\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/cities/cities.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {LoginPage} from '../../../login/login/login'\nimport { UserLogin, AuthorizationService} from '../../../services/authService';\n\n\n\n@Component({\n    selector: 'myaccount',\n    templateUrl: 'myaccount.html'\n})\n\nexport class AdminMyAccount {\n\n    private info: UserLogin[] = [];\n\n    public constructor(private myInfo: AuthorizationService, public navCtrl: NavController) {\n        myInfo.retrieveUserInfo().then(data=>this.info=data);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/myaccount/myaccount.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {LoginPage} from '../../../login/login/login'\nimport { StatService, Stat } from '../../../services/statsService';\n\ndeclare var google;\n\n\n@Component({\n    selector: 'stats',\n    templateUrl: 'stats.html'\n})\n\nexport class AdminStats {\n\n    @ViewChild('map') mapElement: ElementRef;\n    map: any;\n\n    private stats: Stat[] = [];\n\n    public constructor(private statService: StatService, public navCtrl: NavController) {\n        statService.retrieveStats().then(data=>this.stats=data);\n\n    }\n\n    ionViewDidLoad(){\n        this.loadMap();\n    }\n\n    loadMap(){\n\n        let latLng = new google.maps.LatLng(-34.9290, 138.6010);\n\n        let mapOptions = {\n            center: latLng,\n            zoom: 15,\n            mapTypeId: google.maps.MapTypeId.ROADMAP\n        }\n\n        this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/stats/stats.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {LoginPage} from '../../../login/login/login'\nimport {Information, UsersInfoService} from '../../../services/usersInfoService';\n\n@Component({\n    selector: 'adminUsers',\n    templateUrl: 'users.html'\n})\n\n/**\n * Admin users tab constructor\n */\nexport class AdminUsers {\n\n\tpublic information: Information[] = [];\n\n    public constructor(private usersInfoService: UsersInfoService, public navCtrl: NavController) {\n        usersInfoService.retrieveInfo().then(data=>this.information=data);\n    }\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/users/users.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { BrowserModule } from '@angular/platform-browser';;\nimport {LocationStrategy} from '@angular/common';\n\n\nimport { BotCast } from './app.component';\nimport {HttpModule, Http, Response} from '@angular/http';\n\nimport { PrincipalPage } from '../pages/principal/principal';\nimport { AddCityModal } from '../pages/principal/addCity/addCity';\nimport { MyCitiesService } from '../services/citiesService';\nimport { ForecastService } from '../services/forecastService';\nimport { GraphsService } from '../services/graphsService';\nimport { ChatbotService } from '../services/chatbotService';\nimport { AuthorizationService } from '../services/authService';\nimport {GeolocationService} from '../services/geolocationService';\nimport { UsersInfoService } from '../services/usersInfoService';\nimport { CityManagerService } from '../services/cityManagerService';\nimport { VisitorService } from '../services/dashboardService';\nimport { SearchedService } from '../services/dashboardService';\nimport { MyForecastService } from '../services/myForecastService';\nimport { StatService } from '../services/statsService';\n\n\nimport { GraphsPage } from '../pages/graficas/graficas';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { ChatbotPage } from '../pages/chatbot/chatbot';\nimport { MyForecastsPage } from '../pages/myforecasts/myforecasts';\n\nimport { LoginPage } from '../login/login/login';\nimport { RegisterPage } from '../login/register/register';\n\nimport { NavBar } from '../pages/admin/navbar/navbar';\n\nimport {AdminDashboard} from '../pages/admin/dashboard/dashboard';\n\nimport {AdminCities} from '../pages/admin/cities/cities';\nimport {AdminMyAccount} from '../pages/admin/myaccount/myaccount';\nimport {AdminStats} from '../pages/admin/stats/stats';\nimport {AdminUsers} from '../pages/admin/users/users';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport {Geolocation} from '@ionic-native/geolocation';\nimport {NativeGeocoder} from '@ionic-native/native-geocoder';\n\n\n/**\n * Register components, import plugins and angular core utilities, Register providers for services\n */\n\n@NgModule({\n  declarations: [\n    BotCast,\n    TabsPage,\n    PrincipalPage,\n    AddCityModal,\n    GraphsPage,\n    MyForecastsPage,\n    ChatbotPage,\n    LoginPage,\n    RegisterPage,\n    AdminDashboard,\n    NavBar,\n    AdminCities,\n    AdminUsers,\n    AdminMyAccount,\n    AdminStats,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    ChartsModule,\n    IonicModule.forRoot(BotCast)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    BotCast,\n    TabsPage,\n    PrincipalPage,\n    AddCityModal,\n    GraphsPage,\n    MyForecastsPage,\n    ChatbotPage,\n    LoginPage,\n    RegisterPage,\n    AdminDashboard,\n    NavBar,\n    AdminCities,\n    AdminUsers,\n    AdminMyAccount,\n    AdminStats,\n\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    MyCitiesService,\n    ForecastService,\n    GraphsService,\n    ChatbotService,\n    AuthorizationService,\n    UsersInfoService,\n    CityManagerService,\n    Geolocation,\n    NativeGeocoder,\n    GeolocationService,\n    SearchedService,\n    VisitorService,\n    MyForecastService,\n    StatService,\n\n    {provide: {ErrorHandler, LocationStrategy}, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { LoginPage } from '../login/login/login';\n\n@Component({\n  templateUrl: 'app.html'\n})\n\n/**\n * Initialize application, register platform and aux services\n */\nexport class BotCast {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","var map = {\n\t\"./af\": 230,\n\t\"./af.js\": 230,\n\t\"./ar\": 231,\n\t\"./ar-dz\": 232,\n\t\"./ar-dz.js\": 232,\n\t\"./ar-kw\": 233,\n\t\"./ar-kw.js\": 233,\n\t\"./ar-ly\": 234,\n\t\"./ar-ly.js\": 234,\n\t\"./ar-ma\": 235,\n\t\"./ar-ma.js\": 235,\n\t\"./ar-sa\": 236,\n\t\"./ar-sa.js\": 236,\n\t\"./ar-tn\": 237,\n\t\"./ar-tn.js\": 237,\n\t\"./ar.js\": 231,\n\t\"./az\": 238,\n\t\"./az.js\": 238,\n\t\"./be\": 239,\n\t\"./be.js\": 239,\n\t\"./bg\": 240,\n\t\"./bg.js\": 240,\n\t\"./bn\": 241,\n\t\"./bn.js\": 241,\n\t\"./bo\": 242,\n\t\"./bo.js\": 242,\n\t\"./br\": 243,\n\t\"./br.js\": 243,\n\t\"./bs\": 244,\n\t\"./bs.js\": 244,\n\t\"./ca\": 245,\n\t\"./ca.js\": 245,\n\t\"./cs\": 246,\n\t\"./cs.js\": 246,\n\t\"./cv\": 247,\n\t\"./cv.js\": 247,\n\t\"./cy\": 248,\n\t\"./cy.js\": 248,\n\t\"./da\": 249,\n\t\"./da.js\": 249,\n\t\"./de\": 250,\n\t\"./de-at\": 251,\n\t\"./de-at.js\": 251,\n\t\"./de-ch\": 252,\n\t\"./de-ch.js\": 252,\n\t\"./de.js\": 250,\n\t\"./dv\": 253,\n\t\"./dv.js\": 253,\n\t\"./el\": 254,\n\t\"./el.js\": 254,\n\t\"./en-au\": 255,\n\t\"./en-au.js\": 255,\n\t\"./en-ca\": 256,\n\t\"./en-ca.js\": 256,\n\t\"./en-gb\": 257,\n\t\"./en-gb.js\": 257,\n\t\"./en-ie\": 258,\n\t\"./en-ie.js\": 258,\n\t\"./en-nz\": 259,\n\t\"./en-nz.js\": 259,\n\t\"./eo\": 260,\n\t\"./eo.js\": 260,\n\t\"./es\": 261,\n\t\"./es-do\": 262,\n\t\"./es-do.js\": 262,\n\t\"./es.js\": 261,\n\t\"./et\": 263,\n\t\"./et.js\": 263,\n\t\"./eu\": 264,\n\t\"./eu.js\": 264,\n\t\"./fa\": 265,\n\t\"./fa.js\": 265,\n\t\"./fi\": 266,\n\t\"./fi.js\": 266,\n\t\"./fo\": 267,\n\t\"./fo.js\": 267,\n\t\"./fr\": 268,\n\t\"./fr-ca\": 269,\n\t\"./fr-ca.js\": 269,\n\t\"./fr-ch\": 270,\n\t\"./fr-ch.js\": 270,\n\t\"./fr.js\": 268,\n\t\"./fy\": 271,\n\t\"./fy.js\": 271,\n\t\"./gd\": 272,\n\t\"./gd.js\": 272,\n\t\"./gl\": 273,\n\t\"./gl.js\": 273,\n\t\"./gom-latn\": 274,\n\t\"./gom-latn.js\": 274,\n\t\"./he\": 275,\n\t\"./he.js\": 275,\n\t\"./hi\": 276,\n\t\"./hi.js\": 276,\n\t\"./hr\": 277,\n\t\"./hr.js\": 277,\n\t\"./hu\": 278,\n\t\"./hu.js\": 278,\n\t\"./hy-am\": 279,\n\t\"./hy-am.js\": 279,\n\t\"./id\": 280,\n\t\"./id.js\": 280,\n\t\"./is\": 281,\n\t\"./is.js\": 281,\n\t\"./it\": 282,\n\t\"./it.js\": 282,\n\t\"./ja\": 283,\n\t\"./ja.js\": 283,\n\t\"./jv\": 284,\n\t\"./jv.js\": 284,\n\t\"./ka\": 285,\n\t\"./ka.js\": 285,\n\t\"./kk\": 286,\n\t\"./kk.js\": 286,\n\t\"./km\": 287,\n\t\"./km.js\": 287,\n\t\"./kn\": 288,\n\t\"./kn.js\": 288,\n\t\"./ko\": 289,\n\t\"./ko.js\": 289,\n\t\"./ky\": 290,\n\t\"./ky.js\": 290,\n\t\"./lb\": 291,\n\t\"./lb.js\": 291,\n\t\"./lo\": 292,\n\t\"./lo.js\": 292,\n\t\"./lt\": 293,\n\t\"./lt.js\": 293,\n\t\"./lv\": 294,\n\t\"./lv.js\": 294,\n\t\"./me\": 295,\n\t\"./me.js\": 295,\n\t\"./mi\": 296,\n\t\"./mi.js\": 296,\n\t\"./mk\": 297,\n\t\"./mk.js\": 297,\n\t\"./ml\": 298,\n\t\"./ml.js\": 298,\n\t\"./mr\": 299,\n\t\"./mr.js\": 299,\n\t\"./ms\": 300,\n\t\"./ms-my\": 301,\n\t\"./ms-my.js\": 301,\n\t\"./ms.js\": 300,\n\t\"./my\": 302,\n\t\"./my.js\": 302,\n\t\"./nb\": 303,\n\t\"./nb.js\": 303,\n\t\"./ne\": 304,\n\t\"./ne.js\": 304,\n\t\"./nl\": 305,\n\t\"./nl-be\": 306,\n\t\"./nl-be.js\": 306,\n\t\"./nl.js\": 305,\n\t\"./nn\": 307,\n\t\"./nn.js\": 307,\n\t\"./pa-in\": 308,\n\t\"./pa-in.js\": 308,\n\t\"./pl\": 309,\n\t\"./pl.js\": 309,\n\t\"./pt\": 310,\n\t\"./pt-br\": 311,\n\t\"./pt-br.js\": 311,\n\t\"./pt.js\": 310,\n\t\"./ro\": 312,\n\t\"./ro.js\": 312,\n\t\"./ru\": 313,\n\t\"./ru.js\": 313,\n\t\"./sd\": 314,\n\t\"./sd.js\": 314,\n\t\"./se\": 315,\n\t\"./se.js\": 315,\n\t\"./si\": 316,\n\t\"./si.js\": 316,\n\t\"./sk\": 317,\n\t\"./sk.js\": 317,\n\t\"./sl\": 318,\n\t\"./sl.js\": 318,\n\t\"./sq\": 319,\n\t\"./sq.js\": 319,\n\t\"./sr\": 320,\n\t\"./sr-cyrl\": 321,\n\t\"./sr-cyrl.js\": 321,\n\t\"./sr.js\": 320,\n\t\"./ss\": 322,\n\t\"./ss.js\": 322,\n\t\"./sv\": 323,\n\t\"./sv.js\": 323,\n\t\"./sw\": 324,\n\t\"./sw.js\": 324,\n\t\"./ta\": 325,\n\t\"./ta.js\": 325,\n\t\"./te\": 326,\n\t\"./te.js\": 326,\n\t\"./tet\": 327,\n\t\"./tet.js\": 327,\n\t\"./th\": 328,\n\t\"./th.js\": 328,\n\t\"./tl-ph\": 329,\n\t\"./tl-ph.js\": 329,\n\t\"./tlh\": 330,\n\t\"./tlh.js\": 330,\n\t\"./tr\": 331,\n\t\"./tr.js\": 331,\n\t\"./tzl\": 332,\n\t\"./tzl.js\": 332,\n\t\"./tzm\": 333,\n\t\"./tzm-latn\": 334,\n\t\"./tzm-latn.js\": 334,\n\t\"./tzm.js\": 333,\n\t\"./uk\": 335,\n\t\"./uk.js\": 335,\n\t\"./ur\": 336,\n\t\"./ur.js\": 336,\n\t\"./uz\": 337,\n\t\"./uz-latn\": 338,\n\t\"./uz-latn.js\": 338,\n\t\"./uz.js\": 337,\n\t\"./vi\": 339,\n\t\"./vi.js\": 339,\n\t\"./x-pseudo\": 340,\n\t\"./x-pseudo.js\": 340,\n\t\"./yo\": 341,\n\t\"./yo.js\": 341,\n\t\"./zh-cn\": 342,\n\t\"./zh-cn.js\": 342,\n\t\"./zh-hk\": 343,\n\t\"./zh-hk.js\": 343,\n\t\"./zh-tw\": 344,\n\t\"./zh-tw.js\": 344\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 464;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 464\n// module chunks = 0","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\n\n\n/**\n * Model for information transmission object between this service and the user graph view\n */\nexport class GraphDayForecast{\n    /**\n     *\n     * @param date: forecast date/historical data point date\n     * @param tempMax: that day's maximum temperature\n     * @param tempMin: that day's minimum temperature\n     * @param condition: that day's weather condition e.g. \"Light snow\" or \"Overcast\"\n     */\n    constructor(\n        public date:string,\n        public tempMax:number,\n        public tempMin:number,\n        public condition: string\n    ){}\n}\n\n/**\n * Service that build the array of weather historical data for the user graphs tab\n */\n@Injectable()\nexport class GraphsService { //for historical data, pending, API in the past and 8+ days in the future requires premium account\n\n    apiRoot:string = 'http://api.apixu.com/v1/forecast.json';\n    apiKey:String = 'e3dd4e798f1d4c61821153113172310';\n\n    constructor(private http: Http) {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/graphsService.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport {LoginPage} from '../../../login/login/login'\n\nimport {AdminDashboard} from '../dashboard/dashboard'\nimport {AdminCities} from '../cities/cities'\nimport {AdminMyAccount} from '../myaccount/myaccount'\nimport {AdminStats} from '../stats/stats'\nimport {AdminUsers} from '../users/users'\n\nimport { App, ViewController } from 'ionic-angular';\n\n\n\n@Component({\n    selector: 'navbar',\n    templateUrl: 'navbar.html'\n})\n\n/**\n * Admin navigation bar component, corresponds to the reusable visual element displayed at the top of all administrator views\n */\nexport class NavBar {\n\n    /**\n     * Navigation bar constructor\n     * @param navCtrl: application navigation controller\n     * @param navParams: parameters to be passed between different screens\n     * @param appCtrl: application general controler\n     */\n    public constructor(public navCtrl: NavController,public viewCtrl: ViewController, public appCtrl: App) {\n\n    }\n\n    /**\n     * Event binding function with template.\n     * When dashboard button is pressed, change the current view to the dashboard tab\n     */\n    public toDashboardAdminPage():void{\n        this.navCtrl.push(AdminDashboard,{}, {animate: false})\n    }\n\n    /**\n     * Event binding function with template.\n     * When users admin button is pressed, change the current view to the active users tab\n     */\n    public toUsersAdminPage():void{\n        this.navCtrl.push(AdminUsers,{}, {animate: false})\n    }\n\n    /**\n     * Event binding function with template.\n     * When statistics button is pressed, change the current view to the statistics tab\n     */\n    public toStatsAdminPage():void{\n\n        this.navCtrl.push(AdminStats,{}, {animate: false})\n    }\n\n    /**\n     * Event binding function with template.\n     * When cities button is pressed, change the current view to the cities tab\n     */\n    public toCitiesAdminPage():void{\n        this.navCtrl.push(AdminCities,{}, {animate: false})\n    }\n\n    /**\n     * Event binding function with template.\n     * When admin account button is pressed, change the current view to the admin account tab\n     */\n    public toAccountAdminPage():void{\n        this.navCtrl.push(AdminMyAccount,{}, {animate: false})\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/admin/navbar/navbar.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\nimport * as $ from 'jquery';\n\n\nexport class Cities{\n    constructor(\n        public city:string,\n        public country:number,\n        public status:string\n    ){}\n}\n\nexport class ActiveCity{\n    constructor(\n        public id: string,\n        public name:string,\n        public province:string,\n        public country: string,\n        public active: boolean\n    ){}\n}\n\n\n@Injectable()\nexport class CityManagerService {\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * Backend REST endpoint URL to retrieve the user info from JSON\n     */\n    apiRoot:string = '../assets/json/admin/citiesManager/citiesManager.json';\n    apiRoot2:string = 'http://localhost:3000/api/CiudadesCatalogo';\n    apiCiudadesActivas: string = 'http://localhost:3000/api/CiudadesActivas';\n\n    /**\n     * Look up a city by its name or the name of its country, admin operation\n     */\n    public retrieveSearchedCityInfo(cityToSearch: string):Promise<Cities[]>{\n        let query = {\n            where: {\n                or: [\n                    {country: {\n                        like: cityToSearch\n                    }\n                    },\n                    {city: {\n                        like: cityToSearch\n                    }\n                    }\n                ]\n            }\n        }\n\n        let apiURL2 = `${this.apiRoot2}?filter=${JSON.stringify(query)}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL2)\n                .toPromise()\n                .then(\n                    res => {\n                        let cities:Cities[] =[]\n                        let citiesJson = $.map(res.json(), function(e){return e});\n                        $.each(citiesJson, function(i,city){\n                            cities.push(new Cities(\n                                city.city,\n                                city.country,\n                                city.province)\n                            )\n                        });\n                        resolve(cities);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n        return promise;\n    }\n\n\n    /**\n     * Add a city to the list of active cities, admin operation\n     */\n    public addToActiveCitiesService(cityName:string, cityProvince:string, countryName: string): Promise<ActiveCity>{\n\n        let apiURL = this.apiCiudadesActivas;\n        let params = {\n            nombre: cityName,\n            provincia: cityProvince,\n            pais: countryName,\n            activa: true\n        }\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.post(apiURL, params)\n                .toPromise()\n                .then(\n                    res => {\n                        let newCityJson = res.json();\n                        resolve(new ActiveCity(\n                            newCityJson.id,\n                            newCityJson.nombre,\n                            newCityJson.provincia,\n                            newCityJson.pais,\n                            newCityJson.activa\n                        ));\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n        return promise;\n    }\n\n    /**\n     * Remove a city from the list of active cities, admin operation\n     */\n    public removeCity(id){\n\n        let apiURL2 = `${this.apiCiudadesActivas}/${id}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.delete(apiURL2)\n                .toPromise()\n                .then(\n                    res => {\n                        resolve({message: \"Erased from active cities\"});\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n\n    }\n\n\n    /**\n     * Retrieve the list of active cities, determined by an administrator\n     */\n    public retrieveActiveCities():Promise<ActiveCity[]>{\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(this.apiCiudadesActivas)\n                .toPromise()\n                .then(\n                    res => {\n                        let cities:ActiveCity[] =[]\n                        let citiesJson = $.map(res.json(), function(e){return e});\n                        $.each(citiesJson, function(i,city){\n                            cities.push(new ActiveCity(\n                                city.id,\n                                city.nombre,\n                                city.provincia,\n                                city.pais,\n                                city.activa)\n                            )\n                        });\n                        resolve(cities);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/cityManagerService.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\nimport * as $ from 'jquery';\n\n\nexport class Information{\n    /**\n     * @param name: name of the user\n     * @param age: age of the user\n     * @param username: username of the user\n     * @param email: email of the user\n     * @param logins: number of logins from the user\n     * @param lastlogin: Date in which the user last connected\n     * @param lastlocation: Last location from where the user connected\n     */\n    constructor(\n        public name:string,\n        public age:number,\n        public username:string,\n        public email:string,\n        public logins:number,\n        public lastlogin:string,\n        public lastlocation:string\n    ){}\n}\n\nexport class Usuario{\n    constructor(\n        public name:string,\n        public lastname:string,\n        public username:string,\n        public email:string,\n        public password:string,\n        public cities: [object]\n    ){}\n}\n\n\n@Injectable()\nexport class UsersInfoService {\n\n    constructor(private http: Http) {\n    }\n\n    //Currently a dummy call to a local json\n    /**\n     * Backend REST endpoint URL to retrieve the user info from JSON\n     */\n    apiRoot:string = '../assets/json/admin/usersinfo/usersinfo.json';\n\n    apiRootUsuario:string = 'http://localhost:3000/api/Usuarios';\n\n\n    public retrieveUserInfoById(idUsuario:string):Promise<Usuario>{\n        let apiURL = `${this.apiRootUsuario}/${idUsuario}`;\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res=>{\n                        let user = res.json()\n                        resolve(new Usuario(\n                            user.nombre,\n                            user.apellido,\n                            user.usuario,\n                            user.email,\n                            user.password,\n                            user.ciudades\n                        ))\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                )\n        });\n        return promise;\n    }\n\n\n    public retrieveInfo():Promise<Information[]>{\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let infos:Information[] =[]\n                        let infosJson = $.map(res.json(), function(e){return e});\n                        console.log(infosJson)\n                        $.each(infosJson, function(i,info){\n                            infos.push(new Information(\n                                info.name,\n                                info.age,\n                                info.username,\n                                info.email,\n                                info.logins,\n                                info.lastlogin,\n                                info.lastlocation)\n                            )\n                        });\n                        resolve(infos);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n\n    public updateUserInfo(idUsuario:string, params):Promise<Usuario>{\n        let apiURL = `${this.apiRootUsuario}/${idUsuario}`;\n        console.log(apiURL)\n        let promise = new Promise((resolve, reject) => {\n            this.http.put(apiURL, params)\n                .toPromise()\n                .then(\n                    res=>{\n                        let user = res.json()\n                        resolve(new Usuario(\n                            user.nombre,\n                            user.apellido,\n                            user.usuario,\n                            user.email,\n                            user.password,\n                            user.ciudades\n                        ))\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                )\n        });\n        return promise;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/usersInfoService.ts","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport * as $ from 'jquery';\n\n\n/**\n * Data transfer object that encodes the credentials of a potential user that wants to login into the system\n */\nexport class UserLogin{\n    /**\n     * @param username: potential user username\n     * @param password: potential user password\n     * @param timestamp: time at which the login was attempted\n     * @param privileges: what kind of user, admin or common\n     */\n    constructor(\n        public username:string,\n        public password:string,\n        public timestamp:string,\n        public privileges:string\n    ){}\n}\n\n/**\n * Data transfer object that serves as an authentication token for logged users\n */\nexport class AuthorizationToken{\n    /**\n     * @param authorized: the user is authorized\n     * @param timestamp: authorization operation timestamp\n     * @param validUntil: time at which the token expires, users will be logged out if this happens\n     * @param privileges: what kind of user, admin or common\n     */\n    constructor(\n        public authorized:boolean,\n        public timestamp:string,\n        public validUntil:string,\n        public privileges:string\n    ){}\n}\n\n/**\n * Service that provides authentication mechanisms for the login workflow\n */\n@Injectable()\nexport class AuthorizationService {\n\n    constructor(private http: Http) {\n    }\n\n    //Currently a dummy call to a local json\n    /**\n     * Backend REST endpoint URL to retrieve the conversation between a user and the chatbot\n     */\n    apiRoot:string = '../assets/json/user/user.json';\n    // apiKey:String = '68940978733581cc8ee68abc6610f53e'; //for later\n\n    /**\n     * This method performs a lookup in the database and checks if the credentials are valid,\n     * then builds the approprite authorization for administrators, common users or rejected users.\n     * @param userToBeAuthorized: user that wants to log into the system\n     * @returns {Promise<T>}: returns a promise that resolves to the authoriztion token encoded in the approprite DTO\n     */\n    //TODO: determine token expiration mechanisms, maybe set a default amount of time and extend based on activity??\n    public authorizeUser(userToBeAuthorized:UserLogin):Promise<AuthorizationToken>{\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n\n                        let users = $.map(res.json(), function(e){return e});\n\n                        let authorized:boolean = false;\n                        let timestamp:string = (new Date())+\"\";\n                        let validUntil:string = \"0000\";\n                        let authTokenPrivileges:string = \"user\";\n\n                        $.each(users, function(i,user){\n                            console.log(user)\n                            if(userToBeAuthorized.password == user.password && userToBeAuthorized.username == user.username){\n                                authorized = true;\n                                validUntil = \"1111\";\n                                if(user.privileges == \"admin\"){\n                                    authTokenPrivileges=\"admin\";\n                                }\n                            }\n                        });\n\n                        resolve(new AuthorizationToken(authorized,timestamp,validUntil, authTokenPrivileges));\n\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n    public retrieveUserInfo(): Promise<UserLogin[]>{\n\n        let apiURL = `${this.apiRoot}`;\n\n        let promise = new Promise((resolve, reject) => {\n            this.http.get(apiURL)\n                .toPromise()\n                .then(\n                    res => {\n                        let info:UserLogin[] =[]\n                        let infoJson = $.map(res.json(), function(e){return e});\n                        console.log(infoJson)\n                        $.each(infoJson, function(i,information){\n                            info.push(new UserLogin(information.username,\n                                information.password,\n                                information.timestamp,\n                                information.privilages))\n                        })\n                        resolve(info);\n                    },\n                    msg => {\n                        reject(msg);\n                    }\n                );\n        });\n\n        return promise;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/authService.ts"],"sourceRoot":""}